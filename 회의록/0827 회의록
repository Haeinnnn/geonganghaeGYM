8/20일 토요일 오프라인 멘토링

멘토링 내용

1. 데이터의 양이 5g라 그런지, 에폭이 한번당 2분이 걸려
작업에 너무 많은 시간이 소요되어 해결 방안 물어보기.
- 데이터 크기가 큰 건 하다보면 자연스럽게 디텍션(탐지)해서 크롭하고 리사이즈하게 됨
- 사람이 직접 하는게 아니라 하다보면 자연스럽게 해결될 것, 이 자체가 문제풀이임.
- 1분 미만으로 적게해서 코드가 맞는건지 확인부터 해야함.
- 사진 관리하는 프로그램보면 일괄 리사이즈 기능이 있어, 보통은 큰 사진을 1/10으로 줄여서 쓰기도 함.
- 리사이즈만 하더라도 10분은 줄음.
- 많아봤자 10g로 써야하는게, 서버 메모리가 32g나 64g기 때문에 메모리가 터진다.
- 그래서 보통 영상은 1g, 5g, 10g를 흔하게 사용함

2. 사진의 용량을 줄여도 포즈가 인식이 되는지.
- 일단 모델에 들어갈때 자체적으로 리사이즈가 됨.
- 리사이즈를 많이 시키면 정보가 좋아지지는 않음
- 예시로 500x500정도의 크기가 적당하고, 기본인 224x224는 좀 적음.
- 파일 크기가 적어야 로딩하고 가지고 다니기가 용의하다.

3. 포즈만 보이게 사진을 잘랐더니, 자른 데이터의 총합이 1g이 나왔다. 적당한 크기인지 아니면 더욱 자르는게 효율적인지.
- 포즈같은경우는 기본적으로 인식이 잘 되어서 적어도 괜찮음. 어마어마하게 많아야 할 정도는 아님.
- 일단은 절대적으로 용량 크기보다는 갯수가 중요함

4. open포즈로 for문을 돌려 포즈 추출하는것부터 해야하는지, cnn으로 사람을 탐지해 자르는 for문을 먼저 돌리는게 맞는지 순서 물어보기.
- 사람의 이미지 분류는 이제는 흔하다고 생각함.
- 포즈 추출된 결과를 입력해보기
- 추출된 결과는 숫자로 3개의 변수값에 담고, 걔네들을 입력으로 한번 분류해보기. 이게 좀 더 활용성이 큼!
- 추가적으로 영상보단 사진으로 해보기
- 사진같은 방식으론 사람들이 많이 안하는데다 영상에 비해 난이도도 쉬워서 하는데 어렵지는 않을거임.
- 데이터는 사진 한 장당 사람 한 명만 찍힌걸로 사용해야함.
- 그러나 이것 자체가 기능추가기 때문에 완성도에 집중하고 시간이 부족하면 하지 말기.

5. 코랩 런타임이 자꾸 끊겨서 연결 유지 코드를 찾았는데 써도 괜찮은지.
- 구글에서 그런 코드는 금방금방 막아버려서 정말 최근 글 아니면 안될것.
- 하더라도 최신버전을 찾아서 하기. 근데 찾다가 안되어서 결국 결제해서 쓰는거라고 말씀해주심...

6. 레이어를 많이 쓸수록 데이터 사이즈나 실행시간에 영향을 주는지.
- 정답부터 말하자면 오히려 데이터와 모델 사이즈가 점점 작아지며 실행시간도 줄어들음
- summary의 flatten(401408)과 밑의 dense(64)의 파라미터 개수를 곱하면 모델사이즈(25690176)가 나옴
- conv를 더 쓸수록 모델 크기가 더 작아지고, 데이터 사이즈도 점점 줄어들음
- 레이어는 적당히 늘려야하는데, 너무 늘리면 데이터가 압축되고 압축되어서 크기가 너무 줄어들음.

conv 레이어를 넣어주면 데이터 사이즈가 점점 작아짐
flatten한거하고 개수곱하기 dense개수가 이 모델에서 제일 큼
모델 크기가 더 작아질수도 있음
데이터 사이즈는 점점 들어주고
flatten을 하면 dense개수가
많이 주면 사이즈가 작아지니까 효용성이 있고
flatten한 부분을 보면 파라미터 개수를 볼 수 있고
레이어가 늘어나면 모델 크기가 작게 됨
실행시간도 줄어들음
flatten x dence가 summary
많이쓰면 dence가 줄어들음
모델 사이즈가 줄어드니까 천만단위쯤 되면 비례해서 에폭시간

7. 배치사이즈를 바꿨더니 실행되는게 있고 안되는게 있었다. 이유가 무엇인가?
- 교육에서 썼던것들은 전부 정제된 데이터라 쉽게쉽게 할 수 있었음.
- 그런데 정제되지 않은 실무 데이터로 할 땐 본인이 배치사이즈를 찾아내야함
- 아웃오브메모리가 안나오면서, 시간이 줄어드는 배치사이즈를 찾기.
- 아웃오브메모리 나오는 이유는 데이터를 100주는데 gpur가 10이기 때문에 뜨는것.
- 또한 배치사이즈도 실행 시간에 영향을 줌

---------------------------------------------------------------

+ 회의 후 잡담


제출이 목표인데 문서보단 동영상이 임펙트가 큼
사진들만 나열하면 임펙트가 없음, 그러니까 동영상으로 만들어보기
글로 쓰면 더 안됨... 똑같은걸 주절주절 글씨로 읽어야 하니까 보기 싫음
프레임을 읽어 추출하고 루프로 반복하고 스냅샷으로 된걸 동영상으로 만드는 코드들도 있음.

동영상 예시는 글씨 크게만들어서 자세를 신경쓰세요 나빠졌어요 알려주기
테두리에 번쩍거리게 만든다던지 시각화로 보여주면 좋음
코드 구현도 어렵지 않고 테두리만 그리면 되는거임
제출용 동영상에는 말빼고 자막이 좋다고 생각함
그리고 자막보다는 느낌으로 알 수 있게 하기, 말로써 자막을 달려고 하면 어색해짐
예능용자막처럼 달기
동작을 안하면 안되고, 완성도가 중요☆☆
코드를 가져와서 어느곳에도 적용이 되는 사례가 매우 좋음, 서비스 만들기에 최적화.

올리는 코드 파일은 덮어씌우지 말기
파일에 날짜 표기하고 하루 바뀌면 다른 날짜로 바꿔서 올리는것이 양도 늘고 보기도 좋다.

포폴에 대해서는 어떻게 작성하면 좋은지
이거 하나하나가 공부하고 하는거라
지금 쓰고 있는 코드만 글로 올려놓더라도 블로그 만듦
문서 하나만 작성하는데도 시간이 많이 걸리는데다 일주일이 지나면 잊어버리니
공부하면서 그때그때 글을 올리기
글을 올리기 위한 블로그를 만들어 놓는게 좋음.

멘토링이 한 번 남았기 때문에, 다음주는 산출물 위주로 얘기할거임
협업에 대해선 잘 되고 있고 깃허브도 잘 쓰고 있음.

github의 pull request는 수정한걸 반영해주는것
신입이 아무것도 모르고 그냥 있는 코드를 수정하면 안되니까.
pull request를 하는게 review, 반영하는걸 merge라고 함.

리눅스의 수준은 교육때 배운 리눅스정도면 충분함
공부는 어쨌든지간에 문제풀이가 최고임.

플젝 끝나고 진행하는 수업은
keras example에서 자기가 가장 쉬워보이는걸 찍어서 설명하는거
형태는 어떤것이든 상관없음.

---------------------------------------------------------------

다음주 월요일까지
- 금요일 오프라인 회의 장소 찾아보기
- 코랩 결제하기
- 우리 데이터로 각자 stand-bad 폴더 하나씩 맡아서 저장부터 시키기
- 저장한폴더를 다시 openpose로 for문을 써서 포즈 학습시키기
