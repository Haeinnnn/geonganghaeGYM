8/20일 토요일 오프라인 멘토링

멘토링 내용

1. 데이터의 양이 5g라 그런지, 에폭이 한번당 2분이 걸려
작업에 너무 많은 시간이 소요되어 해결 방안 물어보기.
- 데이터 크기가 큰 건 하다보면 자연스럽게 디텍션(탐지)해서 크롭하고 리사이즈하게 됨
- 사람이 직접 하는게 아니라 하다보면 자연스럽게 해결될 것, 이 자체가 문제풀이임.
- 1분 미만으로 적게해서 코드가 맞는건지 확인부터 해야함.
- 사진 관리하는 프로그램보면 일괄 리사이즈 기능이 있어, 보통은 큰 사진을 1/10으로 줄여서 쓰기도 함.
- 리사이즈만 하더라도 10분은 줄음.
- 많아봤자 10g로 써야하는게, 서버 메모리가 32g나 64g기 때문에 메모리가 터진다.
- 그래서 보통 영상은 1g, 5g, 10g를 흔하게 사용함

2. 사진의 용량을 줄여도 포즈가 인식이 되는지.
- 일단 모델에 들어갈때 자체적으로 리사이즈가 됨.
- 리사이즈를 많이 시키면 정보가 좋아지지는 않음
- 예시로 500x500정도의 크기가 적당하고, 기본인 224x224는 좀 적음.
- 파일 크기가 적어야 로딩하고 가지고 다니기가 용의하다.

3. 포즈만 보이게 사진을 잘랐더니, 자른 데이터의 총합이 1g이 나왔다. 적당한 크기인지 아니면 더욱 자르는게 효율적인지.
- 포즈같은경우는 기본적으로 인식이 잘 되어서 적어도 괜찮음. 어마어마하게 많아야 할 정도는 아님.
- 일단은 절대적으로 용량 크기보다는 갯수가 중요함

4. open포즈로 for문을 돌려 포즈 추출하는것부터 해야하는지, cnn으로 사람을 탐지해 자르는 for문을 먼저 돌리는게 맞는지 순서 물어보기.
- 사람의 이미지 분류는 이제는 흔하다고 생각함.
- 포즈 추출된 결과를 입력해보기
- 추출된 결과는 숫자로 3개의 변수값에 담고, 걔네들을 입력으로 한번 분류해보기. 이게 좀 더 활용성이 큼!
- 추가적으로 영상보단 사진으로 해보기
- 사진같은 방식으론 사람들이 많이 안하는데다 영상에 비해 난이도도 쉬워서 하는데 어렵지는 않을거임.
- 데이터는 사진 한 장당 사람 한 명만 찍힌걸로 사용해야함.
- 그러나 이것 자체가 기능추가기 때문에 완성도에 집중하고 시간이 부족하면 하지 말기.

5. 코랩 런타임이 자꾸 끊겨서 연결 유지 코드를 찾았는데 써도 괜찮은지.
- 구글에서 그런 코드는 금방금방 막아버려서 정말 최근 글 아니면 안될것.
- 하더라도 최신버전을 찾아서 하기. 근데 찾다가 안되어서 결국 결제해서 쓰는거라고 말씀해주심...

---------------------------------------------------------------

+ 회의 후 잡담

구글드라이브파일 중
u붙은게 압축푼거고 cut은 용량줄인거

에폭 10번은 돌아가는지 확인만 하는 정도
기본에폭은 100정도부터 시작, 보통 몇천도 함
100미만은 안쓰는 거라고 생각해두기

사진은 전체 1600장으론 충분하다.
10배 20배로 늘리기 때문에 2만장효과가 나온다.

바로 전 팀에도 얘기했지만
2-3주우왕자왕하다가 제출한팀이 반절
범위를 좁혀서 완성도에 집중하기

메일로 질문하면 보통 몇시간~하루정도 기다려야함

다른 모델 쓸때도 러닝레이트는 따로 저장해줄수있음
adam일때 쓰던건 최적화된 걸 보여준거
다른 옵티마이저 쓸때는 러닝레이트 정의해서 해주면 됨

---------------------------------------------------------------

다음주 월요일까지
- callback에다가 모델체크포인트 섞어서 저장하는 모델 만들어보기
- (참고자료: 라쿤모델저장/ callback 모델체크포인트활용)
